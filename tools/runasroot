#!/bin/bash

# A graphical frontend for su(do).

dlg ()
{
	yad --window-icon=system-lock-screen --geometry=500 "$@"
}

# Error dialog
dlg_e ()
{
	dlg --title "Error" --image=gtk-dialog-error --button=gtk-ok --text "$1"
}

# Create a temp file that sets $XAUTHORITY, $DISPLAY and executes the actual command.
create_tmp_script ()
{
	tmp_script=$(mktemp /tmp/runasroot.XXXXXXXXX)
	printf "#!/bin/bash\nexport DISPLAY=\"$DISPLAY\"\nexport XAUTHORITY=\"$XAUTHORITY\"\nexec \"\$@\"" >> $tmp_script
	chmod +x $tmp_script
}		
	
if [[ -z "$1" ]]; then
	echo "Usage: $0 [command]"
	exit 0
fi

if [[ $EUID == 0 ]]; then
	exec "$@"
fi

if which sudo &>/dev/null; then
	while true; do
		pw="$(dlg --entry --hide-text --text "Please enter your password:" --image=dialog-password --title "Authorisation required")" || exit 254
		if ! echo "$pw" | sudo -Sk bash -c '[[ $EUID == 0 ]]'; then
			dlg_e "The program could not be run, possibly because you typed in a wrong password, or you are not allowed to run sudo."
		else
			create_tmp_script
			echo "$pw" | sudo -S $tmp_script "$@"
			exit $?
		fi
	done
else
	terminal_command=$(terminal-emulator)
	if [[ $? != 0 ]]; then
		dlg_e "A suitable terminal emulator was not found, please execute the required command from a terminal emulator."
	else
		create_tmp_script "$@"
		$terminal_command su_wrapper $tmp_script "$@"
		exit $?
	fi
fi
